/**
    KIWAKU - Containers Well Made
    Copyright : KIWAKU Contributors & Maintainers
    SPDX-License-Identifier: BSL-1.0
**/
#include <kwk/kwk.hpp>
#include <iostream>

int main()
{
  using kwk::_;

  //====================================================================================================================
  // Numerical extents
  //====================================================================================================================
  kwk::shape<_,_,_> s1(3, 5, 9);
  kwk::shape<_,_,_> s2(3, 5);     // Equivalent to: kwk::shape<_,_,_> s2(1, 3, 5);

  std::cout << "Size of s3: " << sizeof(s1) << "\n";
  std::cout << s1 << "\n" << s2 << "\n\n";

  //====================================================================================================================
  // Numerical extents with static size
  //====================================================================================================================
  kwk::shape<17,31> s3;
  kwk::shape<17,31> s4(_, _);
  kwk::shape<17,31> s5(17, 31);
  kwk::shape<17,_>  s6(_, 31);

  std::cout << "Size of s3: " << sizeof(s3) << "\n";
  std::cout << s3 << "\n" << s4 << "\n" << s5 << "\n" << s6 << "\n\n";

  //====================================================================================================================
  // Numerical extents with type specifier
  //====================================================================================================================
  kwk::shape<kwk::uint8, kwk::as<unsigned char>> s7(100,100);

  std::cout << "Size of s7: " << sizeof(s7) << "\n";
  std::cout << s7 << "\n";
}
